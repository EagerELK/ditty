# frozen_string_literal: true

require 'ditty/controllers/component'
require '<%= folder %>/models/<%= model_name.underscore %>'
require '<%= folder %>/policies/<%= policy_name.underscore %>'

module <%= namespace %>
  class <%= controller_name %> < Ditty::Component
    set model_class: <%= model_name %>
    set view_folder: '<%= views_folder %>'

    # Add text fields that are searchable here
    SEARCHABLE = %i[].freeze
    # Add field filter definitions here
    FILTERS = [
      <%- many_to_ones.each do |key| -%>
      { name: :<%= key[:table].to_s.singularize %>, field: :<%= key[:key] || 'id' %> },
      <%- end -%>
    ].freeze

    helpers do
      # filter_options helpers that return options for filter dropdowns
      <%- many_to_ones.each do |key| -%>

      def <%= key[:table].to_s.singularize %>_options
        policy_scope(<%= key[:table].to_s.classify %>).as_hash(:<%= key[:key] || 'id' %>, :<%= name_column(key[:table]) %>)
      end
<% end -%>
    end
  end
end
